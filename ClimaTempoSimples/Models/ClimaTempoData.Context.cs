//------------------------------------------------------------------------------
// <auto-generated>
//    O código foi gerado a partir de um modelo.
//
//    Alterações manuais neste arquivo podem provocar comportamento inesperado no aplicativo.
//    Alterações manuais neste arquivo serão substituídas se o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClimaTempoSimples.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    using System.Globalization;
    
    public partial class ClimaTempoDBEntities : DbContext
    {
        public DbSet<Cidade> Cidades { get; set; }
        public DbSet<PrevisaoClima> PrevisaoClimas { get; set; }
        public ClimaTempoDBEntities()
            : base("name=ClimaTempoDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
        public PrevisaoClima TemperaturaMaxima(int colocacaoMaxima)
        {
            return PrevisaoClimas.Where(x => x.DataPrevisao == DateTime.Today).OrderByDescending(x => x.TemperaturaMaxima).Skip(colocacaoMaxima - 1).FirstOrDefault();
        }
        public PrevisaoClima TemperaturaMinima(int colocacaoMinima)
        {
            return PrevisaoClimas.Where(x => x.DataPrevisao == DateTime.Today).OrderBy(x => x.TemperaturaMinima).Skip(colocacaoMinima - 1).FirstOrDefault();
        }
        public PrevisaoClima CidadeIdMaximo()
        {
            return PrevisaoClimas.Where(x => x.DataPrevisao == DateTime.Today).OrderByDescending(x => x.CidadeId).FirstOrDefault();
        }
        public Cidade EncontrarCidadePorId(int id)
        {
            return PrevisaoClimas.Where(x => x.CidadeId == id).Select(x => x.Cidade).FirstOrDefault();
        }
        public PrevisaoClima ClimaNaCidadeNoDia(int id, DateTime data)
        {
            return PrevisaoClimas.Where(x => x.CidadeId == id).Where(x => x.DataPrevisao == data).FirstOrDefault();
        }
        public string DiaDaSemanaNaCidadeAPartirDoDiaDeHoje(int id, int diasDepois)
        {
            return DateTime.Now.AddDays(diasDepois).ToString("dddd",new CultureInfo("pt-BR"));
        }
    }
}
